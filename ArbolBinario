# Flores Soto Gael Eduardo
# Clase: Inteligencia Artificial de 9 a 10
# Árbol Binario de Búsqueda (ABB)


class Nodo:
    def __init__(self, valor):
        self.valor = valor
        self.izquierda = None
        self.derecha = None

class ArbolBinarioBusqueda:
    def __init__(self):
        self.raiz = None

    def insertar(self, valor):
        if self.raiz is None:
            self.raiz = Nodo(valor)
        else:
            self._insertar_recursivo(self.raiz, valor)

    def _insertar_recursivo(self, nodo, valor):
        if valor < nodo.valor:
            if nodo.izquierda is None:
                nodo.izquierda = Nodo(valor)
            else:
                self._insertar_recursivo(nodo.izquierda, valor)
        else:
            if nodo.derecha is None:
                nodo.derecha = Nodo(valor)
            else:
                self._insertar_recursivo(nodo.derecha, valor)

    def imprimirArbol(self):
        self._imprimir_recursivo(self.raiz)

    def _imprimir_recursivo(self, nodo):
        if nodo is not None:
            self._imprimir_recursivo(nodo.izquierda)
            print(nodo.valor, end=" ")
            self._imprimir_recursivo(nodo.derecha)

if __name__ == "__main__":
    arbol = ArbolBinarioBusqueda()
    valores = [50, 30, 70, 20, 40, 60, 80] 
    for valor in valores:
        arbol.insertar(valor)

    print("Árbol en orden:")
    arbol.imprimirArbol()
